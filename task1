def text_to_bits(text, encoding='utf-8', errors='surrogatepass'):
    bits = bin(int.from_bytes(text.encode(encoding, errors), 'big'))[2:]
    return bits.zfill(8 * ((len(bits) + 7) // 8))
def hide_char_in_text(text, binary_char):
    print(binary_char)
    text_list = list(text)
    print(text_list)
    for i, bit in enumerate(binary_char):
        if bit == '1':
            if i == ' ':
                pass
            else:
                text_list[i] = text_list[i].upper()
        elif bit == '0':
            text_list[i] = text_list[i].lower()
    return ''.join(text_list)
text = input()
char = input()
result = hide_char_in_text(text,text_to_bits(char))
print(result)
